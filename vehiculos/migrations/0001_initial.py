# Generated by Django 4.2.1 on 2023-08-01 16:33

from django.db import migrations, models
import django.db.models.deletion
import vehiculos.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('usuarios', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('anio_de_fabricacion', models.PositiveIntegerField(help_text='El año de fabricación del vehículo.', validators=[vehiculos.validators.validar_anio_fabricacion], verbose_name='Año de fabricación')),
                ('cilindraje', models.DecimalField(decimal_places=4, help_text='El cilindraje del vehículo.', max_digits=10, verbose_name='Cilindraje')),
                ('color', models.CharField(help_text='El color del vehículo.', max_length=50, verbose_name='Color')),
                ('combustible', models.CharField(choices=[('Gasolina', 'GASOLINA'), ('Diésel', 'DIESEL'), ('Gas', 'GAS'), ('Eléctrico', 'ELECTRICO')], help_text='El tipo de combustible del vehículo.', max_length=30, verbose_name='Combustible')),
                ('condicion', models.CharField(choices=[('Operable', 'OPERABLE'), ('No operable', 'NO_OPERABLE'), ('En mantenimiento', 'EN_MANTENIMIENTO')], help_text='La condición vehicular del vehículo.', max_length=30, verbose_name='Condición vehicular')),
                ('foto_matricula', models.ImageField(blank=True, help_text='La fotografía de la matrícula.', null=True, upload_to='vehiculos', verbose_name='Fotografía de la matrícula')),
                ('foto_vehiculo', models.ImageField(blank=True, help_text='La fotografía del vehículo.', null=True, upload_to='vehiculos', verbose_name='Fotografía del vehículo')),
                ('marca', models.CharField(help_text='La marca del vehículo.', max_length=50, verbose_name='Marca')),
                ('modelo', models.CharField(help_text='El modelo del vehículo.', max_length=50, verbose_name='Modelo')),
                ('numero_de_chasis', models.CharField(help_text='Número de chasis del motor.', max_length=20, unique=True, verbose_name='Número del chasis')),
                ('placa', models.CharField(help_text='La placa del vehículo.', max_length=10, unique=True, validators=[vehiculos.validators.validar_placa_vehicular], verbose_name='Placa')),
                ('tonelaje', models.DecimalField(decimal_places=2, help_text='El tonelaje del vehículo.', max_digits=10, verbose_name='Tonelaje')),
                ('unidad_carburante', models.CharField(choices=[('litros', 'LITROS'), ('galones', 'GALONES')], help_text='La unidad de carburante del vehículo.', max_length=8, verbose_name='Unidad carburante')),
                ('propietario', models.ForeignKey(help_text='El propietario del vehículo.', on_delete=django.db.models.deletion.CASCADE, related_name='vehiculos', to='usuarios.perfilusuario')),
            ],
            options={
                'verbose_name': 'Vehículo',
                'verbose_name_plural': 'Vehículos',
            },
        ),
        migrations.CreateModel(
            name='Llanta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_de_fabricacion', models.CharField(help_text='El código de fabricación de la llanta.', max_length=50, validators=[vehiculos.validators.validar_codigo_dot], verbose_name='Código de fabricación')),
                ('posicion_respecto_al_vehiculo', models.CharField(choices=[('Derecho delantero', 'DERECHO_DELANTERO'), ('Derecho posterior', 'DERECHO_POSTERIOR'), ('Derecho posterior exterior', 'DERECHO_POSTERIOR_EXTERIOR'), ('Derecho posterior interior', 'DERECHO_POSTERIOR_INTERIOR'), ('Izquierdo delantero', 'IZQUIERDO_DELANTERO'), ('Izquierdo posterior', 'IZQUIERDO_POSTERIOR'), ('Izquierdo posterior exterior', 'IZQUIERDO_POSTERIOR_EXTERIOR'), ('Izquierdo posterior interior', 'IZQUIERDO_POSTERIOR_INTERIOR'), ('Respuesto', 'REPUESTO')], help_text='La posición de la llanta respecto al vehículo.', max_length=50, verbose_name='Posición respecto al vehículo')),
                ('vehiculo', models.ForeignKey(help_text='El vehículo al que pertenece la llanta.', on_delete=django.db.models.deletion.CASCADE, related_name='llantas', to='vehiculos.vehiculo')),
            ],
        ),
        migrations.CreateModel(
            name='Kilometraje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kilometraje', models.DecimalField(decimal_places=2, help_text='El kilometraje recorrido por el vehículo.', max_digits=10, verbose_name='Kilometraje')),
                ('unidad', models.CharField(choices=[('km', 'KILOMETROS'), ('mi', 'MILLAS'), ('días', 'DIAS')], help_text='La unidad de medida del kilometraje.', max_length=10, verbose_name='Unidad')),
                ('fecha', models.DateField(help_text='La fecha en la que se registro X kilometraje.', verbose_name='Fecha')),
                ('vehiculo', models.ForeignKey(help_text='El vehículo al que pertenece el odómetro.', on_delete=django.db.models.deletion.CASCADE, related_name='bitacora_kilometraje', to='vehiculos.vehiculo')),
            ],
            options={
                'verbose_name': 'Kilometraje',
                'verbose_name_plural': 'Kilometrajes',
            },
        ),
        migrations.CreateModel(
            name='Bateria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_de_fabricacion', models.CharField(help_text='El código de fabricación de la batería.', max_length=50, validators=[vehiculos.validators.validar_codigo_bateria], verbose_name='Código de fabricación')),
                ('vehiculo', models.ForeignKey(help_text='El vehículo al que pertenece la batería.', on_delete=django.db.models.deletion.CASCADE, related_name='baterias', to='vehiculos.vehiculo')),
            ],
        ),
    ]
