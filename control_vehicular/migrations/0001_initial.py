# Generated by Django 4.2.1 on 2023-06-16 15:58

import control_vehicular.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('login', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Licencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('F', 'F'), ('A1', 'A1'), ('C', 'C'), ('C1', 'C1'), ('D', 'D'), ('D1', 'D1'), ('E', 'E'), ('E1', 'E1')], help_text='El tipo de la licencia (A, B, C, etc.).', max_length=2)),
                ('fecha_de_caducidad', models.DateField(help_text='La fecha de caducidad de la licencia.')),
            ],
        ),
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(help_text='La marca del vehículo.', max_length=50, verbose_name='Marca')),
                ('modelo', models.CharField(help_text='El modelo del vehículo.', max_length=50, verbose_name='Modelo')),
                ('placa', models.CharField(help_text='La placa del vehículo.', max_length=10, unique=True, validators=[control_vehicular.models.validar_placa_vehicular], verbose_name='Placa')),
                ('anio_de_fabricacion', models.PositiveSmallIntegerField(help_text='El año de fabricación del vehículo.', verbose_name='Año de fabricación')),
                ('color', models.CharField(help_text='El color del vehículo.', max_length=50, verbose_name='Color')),
                ('cilindraje', models.FloatField(help_text='El cilindraje del vehículo.', verbose_name='Cilindraje')),
                ('tonelaje', models.FloatField(help_text='El tonelaje del vehículo.', verbose_name='Tonelaje')),
                ('unidad_carburante', models.FloatField(help_text='La unidad de carburante del vehículo.', verbose_name='Unidad carburante')),
                ('combustible', models.CharField(choices=[('Gasolina', 'GASOLINA'), ('Diésel', 'DIESEL'), ('Gas', 'GAS'), ('Eléctrico', 'ELECTRICO')], help_text='El tipo de combustible del vehículo.', max_length=30, verbose_name='Combustible')),
                ('condicion', models.CharField(choices=[('Operable', 'OPERABLE'), ('No operable', 'NO_OPERABLE'), ('En mantenimiento', 'EN_MANTENIMIENTO')], help_text='La condición vehicular del vehículo.', max_length=30, verbose_name='Condición vehicular')),
                ('fotografia', models.ImageField(blank=True, help_text='La fotografía del vehículo.', null=True, upload_to='vehiculos', verbose_name='Fotografía')),
                ('propietario', models.ForeignKey(default=1, help_text='El propietario del vehículo.', on_delete=django.db.models.deletion.CASCADE, related_name='vehiculos', to='login.persona')),
            ],
        ),
        migrations.CreateModel(
            name='Odometro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kilometraje', models.DecimalField(decimal_places=2, help_text='El kilometraje recorrido por el vehículo.', max_digits=10, verbose_name='Kilometraje')),
                ('unidad', models.CharField(choices=[('km', 'KILOMETROS'), ('mi', 'MILLAS'), ('días', 'DIAS')], help_text='La unidad de medida del kilometraje.', max_length=10, verbose_name='Unidad')),
                ('fecha_inicial', models.DateField(help_text='La fecha inicial de uso del vehículo.', verbose_name='Fecha inicial')),
                ('vehiculo', models.OneToOneField(help_text='El vehículo al que pertenece el odómetro.', on_delete=django.db.models.deletion.PROTECT, related_name='odometro', to='control_vehicular.vehiculo')),
            ],
        ),
        migrations.CreateModel(
            name='Matricula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula', models.CharField(help_text='El número de la matrícula.', max_length=50, unique=True, verbose_name='Matrícula')),
                ('foto', models.ImageField(blank=True, help_text='La fotografía de la matrícula.', null=True, upload_to='matriculas', verbose_name='Fotografía')),
                ('propietario', models.ForeignKey(help_text='El propietario de la matrícula.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='login.persona')),
                ('vehiculo', models.OneToOneField(help_text='El vehículo al que pertenece la matrícula.', on_delete=django.db.models.deletion.CASCADE, related_name='matricula', to='control_vehicular.vehiculo')),
            ],
        ),
        migrations.CreateModel(
            name='Llanta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_de_fabricacion', models.CharField(help_text='El código de fabricación de la llanta.', max_length=50, validators=[control_vehicular.models.validar_codigo_dot], verbose_name='Código de fabricación')),
                ('posicion_respecto_al_vehiculo', models.CharField(choices=[('Derecho delantero', 'DERECHO_DELANTERO'), ('Derecho posterior', 'DERECHO_POSTERIOR'), ('Derecho posterior exterior', 'DERECHO_POSTERIOR_EXTERIOR'), ('Derecho posterior interior', 'DERECHO_POSTERIOR_INTERIOR'), ('Izquierdo delantero', 'IZQUIERDO_DELANTERO'), ('Izquierdo posterior', 'IZQUIERDO_POSTERIOR'), ('Izquierdo posterior exterior', 'IZQUIERDO_POSTERIOR_EXTERIOR'), ('Izquierdo posterior interior', 'IZQUIERDO_POSTERIOR_INTERIOR'), ('Respuesto', 'REPUESTO')], help_text='La posición de la llanta respecto al vehículo.', max_length=50, verbose_name='Posición respecto al vehículo')),
                ('vehiculo', models.ForeignKey(help_text='El vehículo al que pertenece la llanta.', on_delete=django.db.models.deletion.CASCADE, related_name='llantas', to='control_vehicular.vehiculo')),
            ],
        ),
        migrations.CreateModel(
            name='Conductor',
            fields=[
                ('persona_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='login.persona')),
                ('licencia', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='control_vehicular.licencia')),
            ],
            options={
                'verbose_name': 'Conductor',
                'verbose_name_plural': 'Conductores',
            },
            bases=('login.persona',),
        ),
        migrations.CreateModel(
            name='Bateria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_de_fabricacion', models.CharField(help_text='El código de fabricación de la batería.', max_length=50, verbose_name='Código de fabricación')),
                ('vehiculo', models.ForeignKey(help_text='El vehículo al que pertenece la batería.', on_delete=django.db.models.deletion.CASCADE, related_name='baterias', to='control_vehicular.vehiculo')),
            ],
        ),
    ]
